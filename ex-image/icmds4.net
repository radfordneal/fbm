#!/bin/bash

# Commands to apply Bayesian neural network to an image classification problem.
#
# This version uses one hidden layer with convolutional connections, and
# a second hidden layer connected to the first, with identical weights for
# all units for one filter.  The first hidden layer connects to the outputs
# with identical weights for all units from one filter.  The second hidden 
# layer is fully connected to the outputs.
#
# Four runs are done, each on three quarters of the training set, with
# the left-out quarters used to assess things like convergence.  Final
# testing is done on the cases not in the training set.

logb=ilog4

for run in 1 2 3 4; do (

  log=$logb.net$run
  end=`calc 384\*$run`
  start=`calc $end-383`

  net-spec $log 36 80 softplus 16 8 4 \
   / bh0=0.2:2 config:bconfig ih=0.2:2 config:iconfig \
     bh1=0.1:2 hh1=0.1:2 config:h2config \
     bh2=0.1:2 hh2=0.1:2 \
     bo=0.1:2 h2o=0.1:2 h1o=0.1:2 h0o=0.1:2 config:hconfig
  model-spec $log class
  
  data-spec $log 36 1 4 / idata-train@-$start:$end . idata-train@$start:$end .

  rand-seed $log $run
  
  net-gen $log fix 0.1

  mc-spec $log repeat 120 heatbath hybrid 200:20 0.06
  net-mc $log 1

  mc-spec $log repeat 60 sample-sigmas heatbath hybrid 400:40 0.1
  net-mc $log 2
  
  mc-spec $log repeat 24 sample-sigmas heatbath 0.9 hybrid 1000:100 0.18 negate
  net-mc $log 1500 

) & done

wait
  
./iend.net $logb 501:
