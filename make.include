# COMMANDS THAT ARE INCLUDED IN ALL MAKEFILES.  
#
# You may wish to modify this file to fit your local installation and
# preferences.  The USE_SIMD_INTRINSICS and USE_FMA options will be
# ignored if the -march specification is not for an architecture that
# has the corresponding instructions. The USE_SLEEF option enables use
# of the SLEEF inline vectorized math functions for some CPU operations,
# which will use SIMD and FMA instructions if available given -march.
#
# The NVCC_OPTIONS are used only if you do make-all with a "gpu" argument,
# to make a version of some programs that use a GPU via CUDA.  Setting 
# the --gpu-architecture option to a later architecture may improve 
# performance when running on such a GPU.  The compute capability 3.5
# setting below is the earliest supported (though deprecated) by CUDA-11.
# The USE_SLEEF_CUDA option for nvcc enables use of SLEEP functions in 
# GPU code.


CC = gcc               # C compiler to use


# Setup for optional use of address sanitizer for testing.  Best used with
# an environment setting ASAN_OPTIONS=detect_leaks=0 since there are some
# innocuous leaks of small amounts of memory.

SANITIZE_OPTS = -fsanitize=address -fsanitize=bounds-strict \
                -static-libasan -fno-omit-frame-pointer

SANITIZE = # $(SANITIZE_OPTS)  # Remove '#' to enable


# Options when compiling .c files

CFLAGS = -g -O3 $(SANITIZE) -march=native -mtune=native \
         -Wno-logical-op-parentheses -Wno-absolute-value -Wno-unused-result \
         -DUSE_SIMD_INTRINSICS -DUSE_FMA \
         -DUSE_SLEEF -ffp-contract=off   # USE_SLEEF requires -ffp-contract=off


# Options when linking .o files

LFLAGS = $(SANITIZE)


# Options for nvcc (CUDA compiler for GPU code)

NVCC_OPTIONS = -g -O3 -Xcompiler -march=native -Xcompiler -mtune=native \
         --threads=0 \
         --generate-code=arch=compute_35,code=compute_35 \
         --generate-code=arch=compute_35,code=sm_35 \
         --generate-code=arch=compute_50,code=sm_50 \
         --generate-code=arch=compute_52,code=sm_52 \
         --generate-code=arch=compute_60,code=sm_60 \
         --generate-code=arch=compute_61,code=sm_61 \
         --generate-code=arch=compute_75,code=sm_75 \
         --generate-code=arch=compute_86,code=sm_86 \
         --ptxas-options=-v \
         -ccbin=g++ \
         -DUSE_SIMD_INTRINSICS -DUSE_FMA \
         -DUSE_SLEEF -Xcompiler -ffp-contract=off # -DUSE_SLEEF_CUDA
