

NET-EVAL:  Evaluate network functions over a grid.  

Net-eval displays the functions defined by a set of networks (or
intermeidate hidden unit values) at a grid of points.  Optionally, the
functions may instead be used to generate target points at random in
accordance with the data model.

Usage:

    net-eval log-file range { / low high grid-size } [ "targets" | h[#] ]

The networks are taken from the named log-file, with the specified
range.  The range has the usual form, "[low][:[high]][%mod]", with
'high' defaulting to 'low' if the colon is absent, and to the end of
the file if the colon is present.

Each group of arguments beginning with "/" describes the grid along
one input dimension, with 'low' and 'high' being the range of the grid
along that dimension, and grid-size + 1 being the number of grid
points spread across that range.  The number of such argument groups
must be the same as the number of input dimensions.  For survival
models with non-constant hazard, the time input is included amongst
these inputs.

The output consists of a section for each network, with sections
separated by blank lines.  Each section contains as many lines as
there are grid points, with each line giving the input values followed
by the output values, or the values in a hidden layer if one is
specified by he last argument (eg, "h2", with just "h" meaning "h0").
When there is more than one input variable, a blank line is output
between groups of points where all but the last variable are the same.

If the final argument is "targets", then rather than writing the
network outputs, the program instead generates target values from
these outputs, as defined by the data model.  This option is not
allowed for survival models, except for those with constant hazard.

Note that the grid gives the actual values to which the input units
are set.  Any transformations that may have been specified with
"data-spec" are ignored.  Similarly, it is the raw output of the
network (or generated target value) that is displayed, without any
transformation.  Hidden unit values are after application of the
activation function.

            Copyright (c) 1995-2021 by Radford M. Neal
